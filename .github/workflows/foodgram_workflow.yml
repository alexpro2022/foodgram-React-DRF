name: Foodgram CI/CD

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9, 3.11]          
  
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return
        pip install -r backend/requirements.txt
        pip install pytest-cov
    - name: Test with flake8 and tests
      env:
        DB: postgres
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
        DB_PASSWORD: 12345
      run: |
        python -m flake8      
        cd backend/
        python manage.py makemigrations
        python manage.py migrate
        # python manage.py test
        pytest --cov --cov-report=xml
    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}         

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          context: backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend
            
            sudo docker-compose stop
            sudo docker-compose rm web
        
            touch .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo TEST_USERS_PASSWORD=${{ secrets.TEST_USERS_PASSWORD }} >> .env

            sudo docker-compose up -d          

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} проекта FOODGRAM успешно выполнен!
